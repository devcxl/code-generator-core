package ${packageName}.controller;

import cn.devcxl.common.base.*;
import ${packageName}.domain.${ClassName};
import ${packageName}.domain.param.Query${ClassName};
import org.springframework.web.bind.annotation.*;
import ${packageName}.service.I${ClassName}Service;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;
import ${primaryKeyField.fieldType.javaType};

/**
 * ${ClassName}Controller
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${requestPath}")
public class ${ClassName}Controller {

    private I${ClassName}Service ${className}ServiceImpl;

    public ${ClassName}Controller(I${ClassName}Service ${className}ServiceImpl) {
        this.${className}ServiceImpl = ${className}ServiceImpl;
    }

    /**
     * 查询${ClassName}列表
     */
    @GetMapping("/list")
    public PageResponse<${ClassName}> list(PageRequest pageRequest, Query${ClassName} query${ClassName}) {
        return ${className}ServiceImpl.select${ClassName}Page(query${ClassName}, pageRequest);
    }


    /**
     * 添加${ClassName}
     * @param ${className}
     * @return
     **/
    @PostMapping("/add")
    public CommonResp<?> add(@RequestBody ${ClassName} ${className}){
        ${className}ServiceImpl.add(${className});
        return CommonResp.ok();
    }


    /**
     * 修改${ClassName}
     */
    @PutMapping("/update")
    public CommonResp<?> update(@RequestBody ${ClassName} ${className}) {
        ${className}ServiceImpl.update(${className});
        return CommonResp.ok();
    }

    /**
     * 删除${ClassName}
     */
    @DeleteMapping("/{id}")
    public CommonResp<?> delete(@PathVariable(name = "id") ${primaryKeyField.fieldType.javaShortType} id){
        ${className}ServiceImpl.delete(id);
        return CommonResp.ok();
    }

    /**
     * 删除${ClassName}
     */
    @DeleteMapping("/batch")
    public CommonResp<?> deleteIds(String ids){
        List<${primaryKeyField.fieldType.javaShortType}> values = Arrays.stream(ids.split(",")).map(${primaryKeyField.fieldType.javaShortType}::valueOf).collect(Collectors.toList());
        return ${className}ServiceImpl.batchDelete(values);
    }


}
