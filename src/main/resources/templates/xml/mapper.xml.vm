<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${packageName}.mapper.${ClassName}Mapper">

    <resultMap type="${ClassName}" id="${ClassName}Result">
    #foreach($field in $fields)
        <result property="${field.javaField}" column="${field.name}"/>
    #end
    </resultMap>

    <select id="page" parameterType="${ClassName}" resultMap="${ClassName}Result">
        select #foreach($field in $fields)`$field.name`#if($foreach.hasNext),#end#end from `${tableName}`
        <where>
#foreach($field in $fields)
#set($queryType=$field.queryType)
#set($javaField=$field.javaField)
#set($javaType=$field.javaType)
#set($columnName=$field.name)
#set($AttrName=$javaField.substring(0,1).toUpperCase() + ${javaField.substring(1)})
#if($field.query)
#if($field.queryType == "EQ")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` = #{$javaField}</if>
#elseif($queryType == "NE")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` != #{$javaField}</if>
#elseif($queryType == "GT")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` &gt; #{$javaField}</if>
#elseif($queryType == "GTE")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` &gt;= #{$javaField}</if>
#elseif($queryType == "LT")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` &lt; #{$javaField}</if>
#elseif($queryType == "LTE")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` &lt;= #{$javaField}</if>
#elseif($queryType == "LIKE")
             <if test="$javaField != null #if($javaType == 'String' ) and $javaField.trim() != ''#end"> and `$columnName` like concat('%', #{$javaField}, '%')</if>
#elseif($queryType == "BETWEEN")
             <if test="begin$AttrName != null and begin$AttrName != '' and end$AttrName != null and end$AttrName != ''"> and `$columnName` between #{begin$AttrName} and #{end$AttrName}</if>
#end
#end
#end
        </where>
#if($table.tree)
            order by ${tree_parent_code}
#end
    </select>

    <!-- 增加 -->
    <insert id="insert" parameterType="${packageName}.domain.${ClassName}">
        INSERT INTO `${tableName}` (#foreach($field in $fields)`$field.name`#if($foreach.hasNext),#end#end)
        VALUES (#foreach($field in $fields)`#{$field.name}`#if($foreach.hasNext),#end#end )
    </insert>
    <!-- 增加 -->
    <insert id="insertRequired" parameterType="${packageName}.domain.${ClassName}">
        INSERT INTO `${tableName}` (#foreach($field in $requiredFields)`$field.name`#if($foreach.hasNext),#end#end)
        VALUES (#foreach($field in $requiredFields)`#{$field.name}`#if($foreach.hasNext),#end#end )
    </insert>

    <!-- 删除用户（虚拟删除，设置标记字段） -->
    <update id="delete">
        UPDATE ${tableName} SET is_deleted = 1 WHERE id = #{id}
    </update>

    <!-- 更新用户信息 -->
    <update id="update" parameterType="${packageName}.domain.${ClassName}">
        UPDATE `${tableName}`
        <set>
        #foreach($field in $fields)
        #if($field.name != $entity.primaryKeyField().name)
            <if test="$field.name != null#if($field.javaType == 'String' ) and $field.javaField.trim() != ''#end">
                `$field.name = #{$field.JavaField}`,
            </if>
        #end
        #end
        </set>
        WHERE id = #{id}
    </update>

    <!-- 根据用户ID查询单一用户 -->
    <select id="getById" parameterType="int" resultType="${packageName}.domain.${ClassName}">
        SELECT * FROM `${tableName}` WHERE id = #{id}
    </select>

    <!-- 分页查询用户列表 -->
    <select id="getUsersByPage" parameterType="map" resultType="${packageName}.domain.${ClassName}">
        SELECT *
        FROM `${tableName}`
        WHERE is_deleted = 0
        ORDER BY id
            LIMIT #{start}, #{pageSize}
    </select>

    <!-- 批量虚拟删除 -->
    <update id="batchDelete" parameterType="list">
        UPDATE `${tableName}`
        SET is_deleted = 1
        WHERE id IN
        <foreach collection="list" item="userId" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>
